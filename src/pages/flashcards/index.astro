---
import MainLayout from "@/layouts/MainLayout.astro";

// Pobierz fiszki z API
const supabase = Astro.locals.supabase;
const { data: { user } } = await supabase.auth.getUser();

let flashcards: any[] = [];
let isLoading = false;
let error: string | null = null;

if (user) {
  try {
    isLoading = true;
    const { data, error: fetchError } = await supabase
      .from("flashcards")
      .select("*")
      .eq("user_id", user.id)
      .order("created_at", { ascending: false });

    if (fetchError) {
      throw new Error(`Nie udało się pobrać fiszek: ${fetchError.message}`);
    }

    flashcards = data || [];
  } catch (err: any) {
    error = err.message;
  } finally {
    isLoading = false;
  }
}
---

<MainLayout title="Fiszki | 10xCards">
  <div class="container mx-auto p-6 max-w-6xl">
    <div class="flex justify-between items-center mb-8">
      <div>
        <h1 class="text-2xl font-bold">Twoje fiszki</h1>
        <p class="text-muted-foreground mt-1">
          Zarządzaj swoimi fiszkami, dodawaj nowe i organizuj swoją naukę
        </p>
      </div>
      <div class="flex gap-2">
        <a
          href="/flashcards/create"
          class="px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90 flex items-center gap-2"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-plus"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
          Dodaj fiszkę
        </a>
        <a
          href="/flashcards/generate"
          class="px-4 py-2 border border-primary text-primary rounded-md hover:bg-primary/10 flex items-center gap-2"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sparkles"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"></path><path d="M5 3v4"></path><path d="M19 17v4"></path><path d="M3 5h4"></path><path d="M17 19h4"></path></svg>
          Generuj z AI
        </a>
      </div>
    </div>

    <div id="success-message" class="bg-green-50 border border-green-200 text-green-700 p-4 rounded-lg mb-6 hidden">
      Fiszka została pomyślnie dodana!
    </div>

    {error && (
      <div class="bg-red-50 text-red-600 p-4 rounded-lg border border-red-200 mb-6">
        <p>Wystąpił błąd podczas ładowania fiszek:</p>
        <p class="font-medium">{error}</p>
      </div>
    )}

    {isLoading ? (
      <div class="flex flex-col items-center justify-center h-64">
        <div class="w-12 h-12 border-4 border-primary/30 border-t-primary rounded-full animate-spin"></div>
        <p class="mt-4 text-muted-foreground">Ładowanie fiszek...</p>
      </div>
    ) : (
      <>
        {flashcards.length === 0 ? (
          <div class="border rounded-lg bg-card p-8 text-center max-w-2xl mx-auto">
            <div class="mx-auto w-16 h-16 bg-primary/10 text-primary rounded-full flex items-center justify-center mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-book-open"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg>
            </div>
            <h2 class="text-xl font-bold mb-2">Brak fiszek</h2>
            <p class="text-muted-foreground mb-6">
              Nie masz jeszcze żadnych fiszek. Zacznij od dodania własnej fiszki
              lub wygenerowania fiszek z tekstu.
            </p>
            <div class="flex flex-col sm:flex-row gap-3 justify-center">
              <a
                href="/flashcards/create"
                class="px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90 flex items-center justify-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-plus"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
                Dodaj fiszkę
              </a>
              <a
                href="/flashcards/generate"
                class="px-4 py-2 border border-primary text-primary rounded-md hover:bg-primary/10 flex items-center justify-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sparkles"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"></path><path d="M5 3v4"></path><path d="M19 17v4"></path><path d="M3 5h4"></path><path d="M17 19h4"></path></svg>
                Wygeneruj fiszki z tekstu
              </a>
            </div>
          </div>
        ) : (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {flashcards.map((flashcard) => (
              <div class="border rounded-lg p-4 bg-card hover:border-primary/50 transition-colors group" data-id={flashcard.id}>
                <div class="flex justify-between items-start mb-2">
                  <h3 class="font-medium text-primary/80 group-hover:text-primary transition-colors">
                    {flashcard.front_content}
                  </h3>
                  <button
                    class="text-gray-500 hover:text-red-500 transition-colors p-1 rounded-md hover:bg-red-50"
                    title="Usuń fiszkę"
                    aria-label="Usuń fiszkę"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-2"><path d="M3 6h18"></path><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path><line x1="10" x2="10" y1="11" y2="17"></line><line x1="14" x2="14" y1="11" y2="17"></line></svg>
                  </button>
                </div>
                <p class="text-muted-foreground text-sm mt-1">{flashcard.back_content}</p>
                <div class="flex justify-between items-center mt-4 pt-2 border-t text-xs text-muted-foreground">
                  <span>
                    {flashcard.is_ai_generated ? "Wygenerowana przez AI" : "Własna"}
                  </span>
                  <span>
                    {new Date(flashcard.created_at).toLocaleDateString()}
                  </span>
                </div>
              </div>
            ))}
          </div>
        )}
      </>
    )}
  </div>

  <script>
    // Check for flashcard creation success message
    document.addEventListener('DOMContentLoaded', () => {
      const successMessage = document.getElementById('success-message');
      const wasFlashcardCreated = sessionStorage.getItem("flashcardCreated") === "true";
      
      if (wasFlashcardCreated && successMessage) {
        // Show success message
        successMessage.classList.remove('hidden');
        
        // Remove the flag from session storage
        sessionStorage.removeItem("flashcardCreated");
        
        // Hide message after 5 seconds
        setTimeout(() => {
          successMessage.classList.add('hidden');
        }, 5000);
      }
    });

    // Funkcja do usuwania fiszki
    document.querySelectorAll('.group button').forEach(button => {
      button.addEventListener('click', async (e) => {
        e.preventDefault();
        
        // Pobierz ID fiszki z atrybutu data-id
        const flashcardEl = e.currentTarget instanceof HTMLElement ? 
          e.currentTarget.closest('.group') : null;
        
        if (!flashcardEl) return;
        
        const flashcardId = flashcardEl.getAttribute('data-id');
        
        if (!flashcardId) return;
        
        // Potwierdzenie usunięcia
        if (confirm('Czy na pewno chcesz usunąć tę fiszkę?')) {
          try {
            const response = await fetch(`/api/flashcards/${flashcardId}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              }
            });
            
            if (response.ok) {
              // Usuń element z DOM
              flashcardEl.remove();
              
              // Jeśli nie ma więcej fiszek, odśwież stronę
              if (document.querySelectorAll('.group').length === 0) {
                window.location.reload();
              }
            } else {
              alert('Nie udało się usunąć fiszki. Spróbuj ponownie.');
            }
          } catch (error) {
            console.error('Błąd podczas usuwania fiszki:', error);
            alert('Wystąpił błąd podczas usuwania fiszki.');
          }
        }
      });
    });
  </script>
</MainLayout> 