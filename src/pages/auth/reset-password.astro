---
import Layout from "@/layouts/Layout.astro";
---

<Layout title="Reset hasła | 10xCards">
  <div class="min-h-[calc(100vh-140px)] flex items-center justify-center py-12 px-4">
    <div class="w-full max-w-md space-y-8">
      <!-- Logo i nagłówek -->
      <div class="text-center">
        <img src="/logo.svg" alt="10xCards" class="h-12 mx-auto mb-4" />
        <h1 class="text-2xl font-bold">Ustal nowe hasło</h1>
        <p class="mt-2 text-muted-foreground">
          Wprowadź nowe hasło dla swojego konta
        </p>
      </div>

      <!-- Formularz ustawienia nowego hasła -->
      <div class="bg-card p-6 shadow-sm rounded-lg border">
        <form id="new-password-form" class="space-y-4">
          <!-- Nowe hasło -->
          <div>
            <label for="password" class="block text-sm font-medium mb-1">Nowe hasło</label>
            <div class="relative">
              <input
                type="password"
                id="password"
                name="password"
                required
                minlength="6"
                class="w-full p-2 border rounded-md bg-background focus:ring-2 focus:ring-primary focus:outline-none"
                placeholder="Minimum 6 znaków"
              />
              <button
                type="button"
                id="toggle-password"
                class="absolute right-2 top-1/2 -translate-y-1/2 text-muted-foreground"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye"><path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/><circle cx="12" cy="12" r="3"/></svg>
              </button>
            </div>
          </div>

          <!-- Potwierdzenie nowego hasła -->
          <div>
            <label for="confirm-password" class="block text-sm font-medium mb-1">Potwierdź hasło</label>
            <div class="relative">
              <input
                type="password"
                id="confirm-password"
                name="confirmPassword"
                required
                class="w-full p-2 border rounded-md bg-background focus:ring-2 focus:ring-primary focus:outline-none"
                placeholder="Powtórz nowe hasło"
              />
              <button
                type="button"
                id="toggle-confirm-password"
                class="absolute right-2 top-1/2 -translate-y-1/2 text-muted-foreground"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye"><path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/><circle cx="12" cy="12" r="3"/></svg>
              </button>
            </div>
          </div>

          <!-- Komunikat o błędzie -->
          <div id="error-message" class="hidden p-3 bg-red-50 text-red-600 text-sm rounded-md border border-red-200"></div>
          
          <!-- Komunikat o sukcesie -->
          <div id="success-message" class="hidden p-3 bg-green-50 text-green-600 text-sm rounded-md border border-green-200">
            Hasło zostało pomyślnie zmienione. Za chwilę zostaniesz przekierowany do strony logowania.
          </div>

          <!-- Komunikat o nieprawidłowym tokenie -->
          <div id="invalid-token-message" class="hidden p-3 bg-red-50 text-red-600 text-sm rounded-md border border-red-200">
            Link do resetowania hasła jest nieprawidłowy lub wygasł. Spróbuj zresetować hasło ponownie.
            <a href="/auth/forgot-password" class="text-red-700 hover:underline">Zresetuj hasło</a>
          </div>

          <!-- Przycisk wysłania -->
          <button
            type="submit"
            id="submit-button"
            class="w-full bg-primary text-white font-medium p-2 rounded-md hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
          >
            Ustaw nowe hasło
          </button>
        </form>
      </div>

      <!-- Linki pomocnicze -->
      <div class="text-center">
        <p class="text-sm text-muted-foreground">
          <a href="/auth/login" class="text-primary hover:underline">Powrót do strony logowania</a>
        </p>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { createClient } from '@supabase/supabase-js';
  
  // Pobranie elementów formularza
  const passwordForm = document.getElementById('new-password-form') as HTMLFormElement;
  const passwordInput = document.getElementById('password') as HTMLInputElement;
  const confirmPasswordInput = document.getElementById('confirm-password') as HTMLInputElement;
  const togglePasswordButton = document.getElementById('toggle-password') as HTMLButtonElement;
  const toggleConfirmPasswordButton = document.getElementById('toggle-confirm-password') as HTMLButtonElement;
  const submitButton = document.getElementById('submit-button') as HTMLButtonElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const successMessage = document.getElementById('success-message') as HTMLDivElement;
  const invalidTokenMessage = document.getElementById('invalid-token-message') as HTMLDivElement;

  // Utworzenie klienta Supabase
  const supabase = createClient(
    import.meta.env.PUBLIC_SUPABASE_URL,
    import.meta.env.PUBLIC_SUPABASE_ANON_KEY
  );

  // Obsługa przycisków przełączania widoczności hasła
  togglePasswordButton.addEventListener('click', () => {
    togglePasswordVisibility(passwordInput, togglePasswordButton);
  });

  toggleConfirmPasswordButton.addEventListener('click', () => {
    togglePasswordVisibility(confirmPasswordInput, toggleConfirmPasswordButton);
  });

  function togglePasswordVisibility(input: HTMLInputElement, button: HTMLButtonElement): void {
    if (input.type === 'password') {
      input.type = 'text';
      button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye-off"><path d="M9.88 9.88a3 3 0 1 0 4.24 4.24"/><path d="M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68"/><path d="M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61"/><line x1="2" x2="22" y1="2" y2="22"/></svg>';
    } else {
      input.type = 'password';
      button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye"><path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/><circle cx="12" cy="12" r="3"/></svg>';
    }
  }

  // Obsługa wysłania formularza
  passwordForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Walidacja formularza
    if (passwordInput.value.length < 6) {
      showError('Hasło musi mieć co najmniej 6 znaków');
      return;
    }
    
    if (passwordInput.value !== confirmPasswordInput.value) {
      showError('Hasła nie są identyczne');
      return;
    }
    
    // Zmiana stanu przycisku na ładowanie
    submitButton.disabled = true;
    submitButton.textContent = 'Aktualizacja hasła...';
    errorMessage.classList.add('hidden');
    
    try {
      // Aktualizacja hasła używając Supabase API
      const { error } = await supabase.auth.updateUser({
        password: passwordInput.value
      });

      if (error) {
        console.error("Błąd aktualizacji hasła:", error);
        showError(error.message || 'Nie udało się zaktualizować hasła. Link mógł wygasnąć lub jest nieprawidłowy.');
        return;
      }
      
      // Sukces z bezpośredniego API Supabase
      console.log("Hasło zaktualizowane pomyślnie");
      successMessage.classList.remove('hidden');
      passwordForm.reset();
      
      // Przekierowanie do strony logowania po krótkim opóźnieniu
      setTimeout(() => {
        window.location.href = '/auth/login?reset=success';
      }, 3000);
      
    } catch (error: any) {
      console.error('Błąd podczas aktualizacji hasła:', error);
      showError(error?.message || 'Wystąpił nieoczekiwany błąd. Spróbuj ponownie później.');
    } finally {
      // Przywrócenie stanu przycisku
      submitButton.disabled = false;
      submitButton.textContent = 'Ustaw nowe hasło';
    }
  });
  
  // Funkcja wyświetlająca komunikat o błędzie
  function showError(message: string): void {
    errorMessage.textContent = message;
    errorMessage.classList.remove('hidden');
  }
</script> 