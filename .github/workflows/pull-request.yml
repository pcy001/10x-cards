---
name: Pull Request Workflow

on:
  pull_request:
    branches: [master]

# Uprawnienia dla GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Run linting
        run: npm run lint
        continue-on-error: true

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Setup Python (required for Playwright)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Playwright browsers
        run: npx playwright install chrome

      - name: Create .env.test file for tests
        run: |
          cat > .env.test << EOL
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
          PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_KEY }}
          E2E_USERNAME_ID=${{ secrets.E2E_USERNAME_ID }}
          E2E_USERNAME=${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD=${{ secrets.E2E_PASSWORD }}
          EOL

      - name: Install adapters
        run: npm install @astrojs/node@9.0.0 --save-exact

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  status-comment:
    name: PR Status Comment
    needs: [lint, unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create status comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const unitStatus = '${{ needs.unit-test.result }}';
            const e2eStatus = '${{ needs.e2e-test.result }}';
            
            const allPassed = (lintStatus === 'success' || lintStatus === 'skipped') 
                           && unitStatus === 'success' 
                           && e2eStatus === 'success';
            
            const status = allPassed ? 'passed' : 'failed';
            const url = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            
            const comment = `PR tests ${status}. [See details](${url})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })

