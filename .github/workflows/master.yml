---
name: Master CI Workflow

on:
  push:
    branches: [master]

# Uprawnienia dla GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write
  issues: write
  statuses: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Run linting
        run: npm run lint
        continue-on-error: true

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  build:
    name: Build
    needs: [unit-test]
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Build project
        run: npm run build

  status-notification:
    name: CI Status
    needs: [lint, unit-test, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create status notification
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const unitStatus = '${{ needs.unit-test.result }}';
            const buildStatus = '${{ needs.build.result }}';
            
            const allPassed = (lintStatus === 'success' || lintStatus === 'skipped') 
                           && unitStatus === 'success' 
                           && buildStatus === 'success';
            
            const status = allPassed ? 'passed' : 'failed';
            const url = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: allPassed ? 'success' : 'failure',
              target_url: url,
              description: `Master CI ${status}`,
              context: 'Master CI'
            }); 